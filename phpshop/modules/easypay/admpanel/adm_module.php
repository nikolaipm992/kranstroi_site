<?phpPHPShopObj::loadClass('order');// SQL$PHPShopOrm = new PHPShopOrm($PHPShopModules->getParam("base.easypay.easypay_system"));// Обновление версии модуляfunction actionBaseUpdate() {    global $PHPShopModules, $PHPShopOrm;    $PHPShopOrm->clean();    $option = $PHPShopOrm->select();    $new_version = $PHPShopModules->getUpdate($option['version']);    $PHPShopOrm->clean();    $action = $PHPShopOrm->update(array('version_new' => $new_version));    return $action;}// Функция обновленияfunction actionUpdate() {    global $PHPShopOrm, $PHPShopModules;    // Настройки витрины    $PHPShopModules->updateOption($_GET['id'], $_POST['servers']);    $PHPShopOrm->debug = false;    $action = $PHPShopOrm->update($_POST);    header('Location: ?path=modules&id=easypay');    return $action;}function actionStart() {    global $PHPShopGUI, $PHPShopOrm;    // Выборка    $data = $PHPShopOrm->select();    $Tab1 = $PHPShopGUI->setField('Режим работы', $PHPShopGUI->setRadio('EP_Debug_new', 1, 'Тестовый', $data['EP_Debug']) .            $PHPShopGUI->setRadio('EP_Debug_new', 0, 'Рабочий', $data['EP_Debug'])    );    $Tab1 .= $PHPShopGUI->setField('Наименование типа оплаты', $PHPShopGUI->setInputText(false, 'title_new', $data['title']));    $Tab1 .= $PHPShopGUI->setField('Номер Поставщика в EasyPay (mer_no)', $PHPShopGUI->setInputText(false, 'EP_MerNo_new', $data['EP_MerNo'], 70));    $Tab1 .= $PHPShopGUI->setField('Ключ для подписи счетов (web_key)', $PHPShopGUI->setInputText(false, 'web_key_new', $data['web_key'], 150));    $Tab1 .= $PHPShopGUI->setField('Время действительности счета в днях', $PHPShopGUI->setInputText(false, 'EP_Expires_new', $data['EP_Expires'], 50));    // Доступые статусы заказов    $PHPShopOrderStatusArray = new PHPShopOrderStatusArray();    $OrderStatusArray = $PHPShopOrderStatusArray->getArray();    $order_status_value[] = array(__('Новый заказ'), 0, $data['status']);    if (is_array($OrderStatusArray))        foreach ($OrderStatusArray as $order_status)            $order_status_value[] = array($order_status['name'], $order_status['id'], $data['status']);    // Статус заказа    $Tab1.= $PHPShopGUI->setField('Оплата при статусе', $PHPShopGUI->setSelect('status_new', $order_status_value, 210), 'left');    $info = '<h4>Настройка модуля</h4>		<ol>                   <ol>        <li>Оставить заявку на сайте <a href="http://ssl.easypay.by/" target="_blank">ssl.easypay.by</a>.        <li>В настройках модуля заполнить поля <kbd>web_key</kbd> и <kbd>mer_no</kbd>, выданные при подключении к EasyPay.        <li>В личном кабинете EasyPay включить режим <kbd>Оповещение на URL поставщика</kbd> и заполнить поле <kbd>URL для уведомлений</kbd> адрес: <code>http://' . $_SERVER['SERVER_NAME'] . '/phpshop/modules/easypay/payment/result.php</code>        <li>В настройках модуля выбрать статус оплаты для осуществления платежа. </ol>     ';    $Tab2 = $PHPShopGUI->setInfo($info);    // Форма регистрации    $Tab3 = $PHPShopGUI->setPay();    // Вывод формы закладки    $PHPShopGUI->setTab(array("Основное", $Tab1, true), array("Инструкция", $Tab2), array("О Модуле", $Tab3));    // Вывод кнопок сохранить и выход в футер    $ContentFooter =            $PHPShopGUI->setInput("hidden", "rowID", $data['id']) .            $PHPShopGUI->setInput("submit", "saveID", "Применить", "right", 80, "", "but", "actionUpdate.modules.edit");    $PHPShopGUI->setFooter($ContentFooter);    return true;}// Обработка событий$PHPShopGUI->getAction();// Вывод формы при старте$PHPShopGUI->setLoader($_POST['editID'], 'actionStart');?>